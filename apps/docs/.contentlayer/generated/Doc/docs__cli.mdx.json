{
  "title": "CLI",
  "description": "Use the SickUI CLI to add components to your project.",
  "published": true,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\n## Installation\n\n```bash\nnpm install -g @sickui/cli\n```\n\n## Usage\n\nUse the `sickui` command to add components to your project.\n\n```bash\nnpx @sickui/cli init\n```\n\nYou will be asked a few questions to configure `components.json`:\n\n```txt\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nWould you like to use CSS variables for colors? › no / yes\n```\n\n## Commands\n\n### init\n\n```bash\nnpx @sickui/cli init\n```\n\nInitialize your project and install dependencies.\n\n#### Options\n\n```txt\nUsage: sickui init [options]\n\ninitialize your project and install dependencies\n\nOptions:\n  -y, --yes        skip confirmation prompt. (default: false)\n  -d, --defaults,  use default configuration. (default: false)\n  -c, --cwd <cwd>  the working directory. defaults to the current directory.\n  -h, --help       display help for command\n```\n\n### add\n\n```bash\nnpx @sickui/cli add [component]\n```\n\nAdd a component to your project.\n\n```bash\nnpx @sickui/cli add button\n```\n\nYou can also run the command without any arguments to view a list of all available components:\n\n```bash\nnpx @sickui/cli add\n```\n\n#### Options\n\n```txt\nUsage: sickui add [options] [components...]\n\nadd a component to your project\n\nArguments:\n  components         the components to add\n\nOptions:\n  -y, --yes          skip confirmation prompt. (default: false)\n  -o, --overwrite    overwrite existing files. (default: false)\n  -c, --cwd <cwd>    the working directory. defaults to the current directory.\n  -a, --all          add all available components (default: false)\n  -p, --path <path>  the path to add the component to.\n  -h, --help         display help for command\n```\n\n### list\n\n```bash\nnpx @sickui/cli list\n```\n\nList all available components.\n\n### diff (experimental)\n\n```bash\nnpx @sickui/cli diff [component]\n```\n\nCheck for updates against the registry.\n\nRunning the following command will check if there's an update available for the `button` component:\n\n```bash\nnpx @sickui/cli diff button\n```\n\n## FAQ\n\n### Why use a CLI instead of an npm package?\n\nThe CLI approach gives you full control over the components. You can modify them as needed, and you don't have to worry about version conflicts or breaking changes.\n\n### Can I use this in my existing project?\n\nYes! The CLI is designed to work with existing projects. Just run `npx @sickui/cli init` to get started.\n\n### What happens when I run init?\n\nRunning `init` will:\n\n1. Create a `components.json` file in your project root\n2. Create a `lib/utils.ts` file with the `cn` helper function\n3. Install the required dependencies\n4. Set up your `tailwind.config.js` file\n\n### Can I customize the components after adding them?\n\nAbsolutely! That's the whole point. The components are copied to your project, so you can modify them however you like.\n",
    "code": "var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var k=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),b=(i,n)=>{for(var a in n)o(i,a,{get:n[a],enumerable:!0})},s=(i,n,a,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of m(n))!g.call(i,c)&&c!==a&&o(i,c,{get:()=>n[c],enumerable:!(l=u(n,c))||l.enumerable});return i};var y=(i,n,a)=>(a=i!=null?p(f(i)):{},s(n||!i||!i.__esModule?o(a,\"default\",{value:i,enumerable:!0}):a,i)),N=i=>s(o({},\"__esModule\",{value:!0}),i);var r=k((j,t)=>{t.exports=_jsx_runtime});var x={};b(x,{default:()=>h,frontmatter:()=>w});var e=y(r()),w={title:\"CLI\",description:\"Use the SickUI CLI to add components to your project.\"};function d(i){let n={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",...i.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\"installation\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#installation\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Installation\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npm install -g @sickui/cli\n`})}),`\n`,(0,e.jsxs)(n.h2,{id:\"usage\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#usage\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Usage\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Use the \",(0,e.jsx)(n.code,{children:\"sickui\"}),\" command to add components to your project.\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli init\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[\"You will be asked a few questions to configure \",(0,e.jsx)(n.code,{children:\"components.json\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-txt\",children:`Which style would you like to use? \\u203A Default\nWhich color would you like to use as base color? \\u203A Slate\nWould you like to use CSS variables for colors? \\u203A no / yes\n`})}),`\n`,(0,e.jsxs)(n.h2,{id:\"commands\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#commands\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Commands\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"init\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#init\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"init\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli init\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Initialize your project and install dependencies.\"}),`\n`,(0,e.jsxs)(n.h4,{id:\"options\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#options\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Options\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-txt\",children:`Usage: sickui init [options]\n\ninitialize your project and install dependencies\n\nOptions:\n  -y, --yes        skip confirmation prompt. (default: false)\n  -d, --defaults,  use default configuration. (default: false)\n  -c, --cwd <cwd>  the working directory. defaults to the current directory.\n  -h, --help       display help for command\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"add\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#add\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"add\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli add [component]\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Add a component to your project.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli add button\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"You can also run the command without any arguments to view a list of all available components:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli add\n`})}),`\n`,(0,e.jsxs)(n.h4,{id:\"options-1\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#options-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Options\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-txt\",children:`Usage: sickui add [options] [components...]\n\nadd a component to your project\n\nArguments:\n  components         the components to add\n\nOptions:\n  -y, --yes          skip confirmation prompt. (default: false)\n  -o, --overwrite    overwrite existing files. (default: false)\n  -c, --cwd <cwd>    the working directory. defaults to the current directory.\n  -a, --all          add all available components (default: false)\n  -p, --path <path>  the path to add the component to.\n  -h, --help         display help for command\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"list\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#list\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"list\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli list\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"List all available components.\"}),`\n`,(0,e.jsxs)(n.h3,{id:\"diff-experimental\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#diff-experimental\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"diff (experimental)\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli diff [component]\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Check for updates against the registry.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Running the following command will check if there's an update available for the \",(0,e.jsx)(n.code,{children:\"button\"}),\" component:\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli diff button\n`})}),`\n`,(0,e.jsxs)(n.h2,{id:\"faq\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#faq\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"FAQ\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"why-use-a-cli-instead-of-an-npm-package\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#why-use-a-cli-instead-of-an-npm-package\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Why use a CLI instead of an npm package?\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The CLI approach gives you full control over the components. You can modify them as needed, and you don't have to worry about version conflicts or breaking changes.\"}),`\n`,(0,e.jsxs)(n.h3,{id:\"can-i-use-this-in-my-existing-project\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#can-i-use-this-in-my-existing-project\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Can I use this in my existing project?\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Yes! The CLI is designed to work with existing projects. Just run \",(0,e.jsx)(n.code,{children:\"npx @sickui/cli init\"}),\" to get started.\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"what-happens-when-i-run-init\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#what-happens-when-i-run-init\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"What happens when I run init?\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Running \",(0,e.jsx)(n.code,{children:\"init\"}),\" will:\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Create a \",(0,e.jsx)(n.code,{children:\"components.json\"}),\" file in your project root\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Create a \",(0,e.jsx)(n.code,{children:\"lib/utils.ts\"}),\" file with the \",(0,e.jsx)(n.code,{children:\"cn\"}),\" helper function\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Install the required dependencies\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Set up your \",(0,e.jsx)(n.code,{children:\"tailwind.config.js\"}),\" file\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h3,{id:\"can-i-customize-the-components-after-adding-them\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#can-i-customize-the-components-after-adding-them\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Can I customize the components after adding them?\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Absolutely! That's the whole point. The components are copied to your project, so you can modify them however you like.\"})]})}function h(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(d,{...i})}):d(i)}return N(x);})();\n;return Component;"
  },
  "_id": "docs/cli.mdx",
  "_raw": {
    "sourceFilePath": "docs/cli.mdx",
    "sourceFileName": "cli.mdx",
    "sourceFileDir": "docs",
    "contentType": "mdx",
    "flattenedPath": "docs/cli"
  },
  "type": "Doc",
  "slug": "/docs/cli",
  "slugAsParams": "cli"
}