{
  "title": "Installation",
  "description": "How to install and configure SickUI in your project.",
  "published": true,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\n## Automatic Installation (Recommended)\n\nUse the SickUI CLI to automatically set up your project:\n\n```bash\nnpx @sickui/cli init\n```\n\nThis will:\n\n1. Create a `components.json` configuration file\n2. Set up the `lib/utils.ts` file with the `cn` helper\n3. Install required dependencies\n4. Configure your `tailwind.config.js` file\n\n## Manual Installation\n\nIf you prefer to set up SickUI manually, follow these steps:\n\n### 1. Install Dependencies\n\n```bash\nnpm install @radix-ui/react-slot class-variance-authority clsx tailwind-merge\n```\n\n### 2. Configure Tailwind CSS\n\nAdd the following to your `tailwind.config.js`:\n\n```js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n};\n```\n\n### 3. Add CSS Variables\n\nAdd the following CSS variables to your `globals.css`:\n\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 221.2 83.2% 53.3%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 221.2 83.2% 53.3%;\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 84% 4.9%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 224.3 76.3% 94.1%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n```\n\n### 4. Create Utils File\n\nCreate `lib/utils.ts`:\n\n```ts\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n```\n\n### 5. Create Components.json\n\nCreate a `components.json` file in your project root:\n\n```json\n{\n  \"$schema\": \"https://sickui.com/schema.json\",\n  \"style\": \"default\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.js\",\n    \"css\": \"app/globals.css\",\n    \"baseColor\": \"slate\",\n    \"cssVariables\": true\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\"\n  }\n}\n```\n\n## Framework Guides\n\n### Next.js\n\nSickUI works great with Next.js 13+ (App Router):\n\n```bash\nnpx create-next-app@latest my-app --typescript --tailwind --eslint\ncd my-app\nnpx @sickui/cli init\n```\n\n### Vite\n\nFor Vite projects:\n\n```bash\nnpm create vite@latest my-app -- --template react-ts\ncd my-app\nnpm install\nnpx @sickui/cli init\n```\n\n### Remix\n\nFor Remix projects:\n\n```bash\nnpx create-remix@latest my-app\ncd my-app\nnpx @sickui/cli init\n```\n\n## Adding Components\n\nOnce installed, you can add components using the CLI:\n\n```bash\nnpx @sickui/cli add button\nnpx @sickui/cli add card\nnpx @sickui/cli add input\n```\n\nOr browse all available components:\n\n```bash\nnpx @sickui/cli add\n```\n\n## TypeScript\n\nSickUI is built with TypeScript and provides full type safety. All components include proper TypeScript definitions.\n\n## That's it!\n\nYou can now start using SickUI components in your project. Check out the [components](/docs/components) to see what's available.\n",
    "code": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),k=(a,n)=>{for(var i in n)c(a,i,{get:n[i],enumerable:!0})},s=(a,n,i,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of m(n))!f.call(a,r)&&r!==i&&c(a,r,{get:()=>n[r],enumerable:!(o=u(n,r))||o.enumerable});return a};var y=(a,n,i)=>(i=a!=null?p(g(a)):{},s(n||!a||!a.__esModule?c(i,\"default\",{value:a,enumerable:!0}):i,a)),x=a=>s(c({},\"__esModule\",{value:!0}),a);var t=b((j,l)=>{l.exports=_jsx_runtime});var N={};k(N,{default:()=>h,frontmatter:()=>v});var e=y(t()),v={title:\"Installation\",description:\"How to install and configure SickUI in your project.\"};function d(a){let n={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",...a.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\"automatic-installation-recommended\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#automatic-installation-recommended\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Automatic Installation (Recommended)\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Use the SickUI CLI to automatically set up your project:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli init\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"This will:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Create a \",(0,e.jsx)(n.code,{children:\"components.json\"}),\" configuration file\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Set up the \",(0,e.jsx)(n.code,{children:\"lib/utils.ts\"}),\" file with the \",(0,e.jsx)(n.code,{children:\"cn\"}),\" helper\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Install required dependencies\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Configure your \",(0,e.jsx)(n.code,{children:\"tailwind.config.js\"}),\" file\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h2,{id:\"manual-installation\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#manual-installation\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Manual Installation\"]}),`\n`,(0,e.jsx)(n.p,{children:\"If you prefer to set up SickUI manually, follow these steps:\"}),`\n`,(0,e.jsxs)(n.h3,{id:\"1-install-dependencies\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#1-install-dependencies\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"1. Install Dependencies\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npm install @radix-ui/react-slot class-variance-authority clsx tailwind-merge\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"2-configure-tailwind-css\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#2-configure-tailwind-css\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"2. Configure Tailwind CSS\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Add the following to your \",(0,e.jsx)(n.code,{children:\"tailwind.config.js\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n};\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"3-add-css-variables\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#3-add-css-variables\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"3. Add CSS Variables\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Add the following CSS variables to your \",(0,e.jsx)(n.code,{children:\"globals.css\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-css\",children:`@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 221.2 83.2% 53.3%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 221.2 83.2% 53.3%;\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 84% 4.9%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 224.3 76.3% 94.1%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"4-create-utils-file\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#4-create-utils-file\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"4. Create Utils File\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Create \",(0,e.jsx)(n.code,{children:\"lib/utils.ts\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-ts\",children:`import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"5-create-componentsjson\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#5-create-componentsjson\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"5. Create Components.json\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Create a \",(0,e.jsx)(n.code,{children:\"components.json\"}),\" file in your project root:\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-json\",children:`{\n  \"$schema\": \"https://sickui.com/schema.json\",\n  \"style\": \"default\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.js\",\n    \"css\": \"app/globals.css\",\n    \"baseColor\": \"slate\",\n    \"cssVariables\": true\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\"\n  }\n}\n`})}),`\n`,(0,e.jsxs)(n.h2,{id:\"framework-guides\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#framework-guides\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Framework Guides\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"nextjs\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#nextjs\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Next.js\"]}),`\n`,(0,e.jsx)(n.p,{children:\"SickUI works great with Next.js 13+ (App Router):\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx create-next-app@latest my-app --typescript --tailwind --eslint\ncd my-app\nnpx @sickui/cli init\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"vite\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#vite\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Vite\"]}),`\n`,(0,e.jsx)(n.p,{children:\"For Vite projects:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npm create vite@latest my-app -- --template react-ts\ncd my-app\nnpm install\nnpx @sickui/cli init\n`})}),`\n`,(0,e.jsxs)(n.h3,{id:\"remix\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#remix\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Remix\"]}),`\n`,(0,e.jsx)(n.p,{children:\"For Remix projects:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx create-remix@latest my-app\ncd my-app\nnpx @sickui/cli init\n`})}),`\n`,(0,e.jsxs)(n.h2,{id:\"adding-components\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#adding-components\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Adding Components\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Once installed, you can add components using the CLI:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli add button\nnpx @sickui/cli add card\nnpx @sickui/cli add input\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Or browse all available components:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-bash\",children:`npx @sickui/cli add\n`})}),`\n`,(0,e.jsxs)(n.h2,{id:\"typescript\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#typescript\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"TypeScript\"]}),`\n`,(0,e.jsx)(n.p,{children:\"SickUI is built with TypeScript and provides full type safety. All components include proper TypeScript definitions.\"}),`\n`,(0,e.jsxs)(n.h2,{id:\"thats-it\",children:[(0,e.jsx)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#thats-it\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"That's it!\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can now start using SickUI components in your project. Check out the \",(0,e.jsx)(n.a,{href:\"/docs/components\",children:\"components\"}),\" to see what's available.\"]})]})}function h(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,{...a,children:(0,e.jsx)(d,{...a})}):d(a)}return x(N);})();\n;return Component;"
  },
  "_id": "docs/installation.mdx",
  "_raw": {
    "sourceFilePath": "docs/installation.mdx",
    "sourceFileName": "installation.mdx",
    "sourceFileDir": "docs",
    "contentType": "mdx",
    "flattenedPath": "docs/installation"
  },
  "type": "Doc",
  "slug": "/docs/installation",
  "slugAsParams": "installation"
}